<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>RSS feed title</title>
        <link>Homepage link</link>
        <description>RSS feed description</description>
        <lastBuildDate>Mon, 15 Oct 2018 20:35:01 +0800</lastBuildDate>
        <language>en</language>
        
        <item>
            <title>Surfing the internet on the science way</title>
            <link>Homepage link/articles/surfing-the-internet-on-the-science-way.html?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=rss</link>
            <guid>Homepage link/articles/surfing-the-internet-on-the-science-way.html</guid>
            <author>jl_lsj#outlook.com Dino Liu</author>
            <pubDate>Mon, 15 Oct 2018 00:00:00 +0800</pubDate>
            <description>&lt;h1 id=&quot;surfing-the-internet-on-the-science-way&quot;&gt;Surfing the internet on the science way&lt;/h1&gt;
&lt;p&gt;On the Ubuntu is much easy to install ss, only below 3 steps&lt;/p&gt;
&lt;pre class=&quot;prettyprint linenums lang-javascript&quot;&gt;apt-get update
apt-get install python-pip
pip install s-h-a-d-o-w-s-o-c-k-s
&lt;/pre&gt;
&lt;p&gt;pip is installation tool for python, like apt-get&lt;/p&gt;
&lt;p&gt;if installed sucessful and no error, the s-s should be instal completely. the next is deploy thing.&lt;/p&gt;
&lt;p&gt;write a config file and save as etc/s-h-a-d-o-w-s-o-c-k-s.json, as following&lt;/p&gt;
&lt;pre class=&quot;prettyprint linenums lang-{&quot;&gt;    &quot;server&quot;:&quot;my_server_ip&quot;,
    &quot;server_port&quot;:8388,
    &quot;local_address&quot;: &quot;127.0.0.1&quot;,
    &quot;local_port&quot;:1080,
    &quot;password&quot;:&quot;mypassword&quot;,
    &quot;timeout&quot;:300,
    &quot;method&quot;:&quot;aes-256-cfb&quot;,
    &quot;fast_open&quot;: false
}
&lt;/pre&gt;
&lt;p&gt;server, server_port, password these are parameters, change it by yourself.
the config file is ok, then try to run it.&lt;/p&gt;
&lt;pre&gt;ssserver -c /etc/s-h-a-d-o-w-s-o-c-k-s.json -d start
&lt;/pre&gt;&lt;p&gt;of cause, we don&#39;t want to setup every time on start server. 
then put the start command copy into below file. &lt;/p&gt;
&lt;pre&gt;/etc/rc.d/rc.local
&lt;/pre&gt;&lt;p&gt;That&#39;s ok, then open the client, hooray!!!&lt;/p&gt;
&lt;p&gt;android client download path:　&lt;a href=&quot;http://s-h-a-d-o-w-s-o-c-k-s.en.uptodown.com/android/download&quot;&gt;http://s-h-a-d-o-w-s-o-c-k-s.en.uptodown.com/android/download&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note: the last thing is replace the hyphen with empty space. &lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Setup email server in windows</title>
            <link>Homepage link/articles/setup-email-server-win.html?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=rss</link>
            <guid>Homepage link/articles/setup-email-server-win.html</guid>
            <author>jl_lsj#outlook.com Dino Liu</author>
            <pubDate>Tue, 13 Dec 2016 00:00:00 +0800</pubDate>
            <description>&lt;h1 id=&quot;setup-the-mail-server-on-windows&quot;&gt;Setup the mail server on windows&lt;/h1&gt;
&lt;p&gt;The eamil function is part of application, which can be send email automatically, or recevid mail from pop server.&lt;/p&gt;
&lt;p&gt;For test purpose, to record the setup steps.
The mail server software is hMailServer.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;following the &lt;a href=&quot;http://peterkellner.net/2012/03/11/how-to-setup-your-own-pop3imap-email-server-for-local-development-testing/&quot;&gt;install steps&lt;/a&gt; to in install hMailServer&lt;/li&gt;
&lt;li&gt;config SSL certificate&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;download &lt;a href=&quot;http://slproweb.com/products/Win32OpenSSL.html&quot;&gt;openssl&lt;/a&gt; run following command to generate new .cer file.&lt;/p&gt;
&lt;p&gt;into the openssl install folder/bin&lt;/p&gt;
&lt;pre&gt;openssl genrsa –out private-rsa.key 1024
&lt;/pre&gt;&lt;p&gt;generate no key file&lt;/p&gt;
&lt;pre&gt;openssl req –new –x509 –key private-rsa.key –days 750 –outpublic-rsa.cer
&lt;/pre&gt;&lt;h2 id=&quot;configuring-hmailserver-to-use-the-ssl-certificate&quot;&gt;Configuring hMailServer to use the SSL certificate&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Start hMailServer Administrator&lt;/li&gt;
&lt;li&gt;Navigate to Settings-&gt;Advanced-&gt;TCP/IP ports&lt;/li&gt;
&lt;li&gt;Select a port &lt;/li&gt;
&lt;li&gt;Select &quot;Use SSL&quot; and the certificate.&lt;/li&gt;
&lt;li&gt;Save the changes&lt;/li&gt;
&lt;li&gt;Restart hMailServer&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Then test it in the application.&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Build dynamic client proxy for WCF and WebService</title>
            <link>Homepage link/articles/dynamic-build-client-proxy.html?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=rss</link>
            <guid>Homepage link/articles/dynamic-build-client-proxy.html</guid>
            <author>jl_lsj#outlook.com Dino Liu</author>
            <pubDate>Tue, 24 May 2016 00:00:00 +0800</pubDate>
            <description>&lt;p&gt;##How to build dynamic proxy for WCF and WebService&lt;/p&gt;
&lt;p&gt;In my daily job recnetly I got a bug which cannot generate assembly for services, but we don&#39;t which is wcf or web service,
in our code only support for webservice to create proxy dynamically. In order to memo the research result, show some snippet here.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For Webservice which is use ServiceDescriptionImporter&lt;/li&gt;
&lt;li&gt;For SVC which is use ServiceContractGenerator&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;the difference for those classes refer from stackoverflow&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ServiceDescriptionImporter is the class that is used by the &quot;Add Web Reference&quot; dialog in VS and the &quot;wsdl.exe&quot; tool in the SDK to generate &quot;asmx&quot;-style client web service proxies. ServiceContractGenerator is the WCF equivalent, for the &quot;Add Service Reference&quot; dialog in VS and the &quot;svcutil.exe&quot; &gt;tool in the SDK. The former uses the asmx client infrastructure (System.Web.Services.Protocols.SoapHttpClientProtocol and friends) and the latter uses the WCF client infrastructure (System.ServiceModel.ClientBase and friends).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Either will be able to talk to most services -- that is, it is intended for both the WCF and asmx client infrastructures to be broadly interoperable with a range of web services standards. A WCF client can talk to an asmx server (as well as servers from other vendors) and vice versa.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;That said, WCF is newer, richer, better supported, and supports more WS standards than does asmx. You will certainly not be locked into only supporting WCF services&lt;br&gt;&lt;a href=&quot;http://stackoverflow.com/a/1772461/3986569&quot;&gt;ServiceContractGenerator vs ServiceDescriptionImporter&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;create-demo-project&quot;&gt;Create demo project&lt;/h3&gt;
&lt;p&gt;create demo project, add console project and wcf project&lt;/p&gt;
&lt;p&gt;1 In wcf project add asmx and svc files&lt;/p&gt;
&lt;p&gt;2 in console project add below code to test&lt;/p&gt;
&lt;p&gt;3 The third way is using service hosting &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ServiceDescription extenstion class&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&quot;prettyprint linenums lang-csharp&quot;&gt;using System;
using System.Net;
using System.Web.Services.Description;
using System.Xml;


public static class ServiceDescriptionExt
{

    public static ServiceDescription ReadEx(string wsdlUrl, NetworkCredential credential)
    {
        XmlTextReader reader = GetXmlTextReader(wsdlUrl, credential);

        if (!ServiceDescription.CanRead(reader))
        {

        }

        ServiceDescription wsdl = ServiceDescription.Read(reader);

        return wsdl;
    }

    public static System.ServiceModel.Description.WsdlImporter GetWsdlImporter(string wsdlUrl)
    {
        var mexMode = System.ServiceModel.Description.MetadataExchangeClientMode.HttpGet;
        var wsdlUri = new Uri(wsdlUrl);
        var mexClient = new System.ServiceModel.Description.MetadataExchangeClient(wsdlUri, mexMode);
        //mexClient.HttpCredentials = credential;
        mexClient.ResolveMetadataReferences = true;
        var metaDocs = mexClient.GetMetadata();
        return new System.ServiceModel.Description.WsdlImporter(metaDocs);
    }

    public static XmlTextReader GetXmlTextReader(string wsdlUrl, NetworkCredential credential)
    {
        Uri uri;
        Uri.TryCreate(wsdlUrl, UriKind.Absolute, out uri);

        XmlTextReader reader;
        if (((uri == null) || (uri.Scheme != &quot;https&quot;)) &amp;&amp; (credential == null))
        {
            reader = new XmlTextReader(wsdlUrl);
        }
        else
        {
            var request = WebRequest.Create(wsdlUrl);
            request.Credentials = credential;

            if ((uri != null) &amp;&amp; (uri.Scheme == &quot;https&quot;) &amp;&amp; request is HttpWebRequest)
                ((HttpWebRequest)request).ServerCertificateValidationCallback += RemoteCertificateValidationCallback;

            WebResponse response = request.GetResponse();
            reader = new XmlTextReader(response.GetResponseStream());
        }

        return reader;
    }

    private static bool RemoteCertificateValidationCallback(object sender, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Security.Cryptography.X509Certificates.X509Chain chain, System.Net.Security.SslPolicyErrors sslPolicyErrors)
    {
        if (sslPolicyErrors == System.Net.Security.SslPolicyErrors.None)
            return true;
        else if (sslPolicyErrors == System.Net.Security.SslPolicyErrors.RemoteCertificateNotAvailable)
            return false;
        else if (sslPolicyErrors == System.Net.Security.SslPolicyErrors.RemoteCertificateNameMismatch)
            return true;
        return true;

    }
}

&lt;/pre&gt;
&lt;p&gt; the methods for generate proxy&lt;/p&gt;
&lt;pre class=&quot;prettyprint linenums lang-csharp&quot;&gt;
        private static void GenerateAssemblyForASMX()
        {
            var codeNamespace = new CodeNamespace();
            var codeUnit = new CodeCompileUnit();
            GenerateCSCodeForService(new EndpointAddress(@&quot;http://localhost:55771/Service1.svc&quot;), @&quot;D:\test.wsdl&quot;);
            GenerateAssemblyForSVC(@&quot;c:\HEATService.wsdl&quot;);
            codeUnit.Namespaces.Add(codeNamespace);
            System.Web.Services.Description.ServiceDescription serviceDescription = ServiceDescriptionExt.ReadEx(@&quot;http://localhost:55771/WebService1.asmx?wsdl&quot;, new NetworkCredential());
            var descriptionImporter = new ServiceDescriptionImporter { ProtocolName = &quot;Soap12&quot; };
            descriptionImporter.AddServiceDescription(serviceDescription, null, null);
            descriptionImporter.Style = ServiceDescriptionImportStyle.Client;
            descriptionImporter.CodeGenerationOptions =
                System.Xml.Serialization.CodeGenerationOptions.GenerateProperties;
            ServiceDescriptionImportWarnings importWarnings = descriptionImporter.Import(codeNamespace, codeUnit);
            if (importWarnings == 0)
            {
                var compiler = CodeDomProvider.CreateProvider(&quot;CSharp&quot;);

                var references = new[] { &quot;System.Web.Services.dll&quot;, &quot;System.Xml.dll&quot; };

                var parameters = new CompilerParameters(references);
                var results = compiler.CompileAssemblyFromDom(parameters, codeUnit);

                if (results.Errors.Cast&lt;CompilerError&gt;().Any())
                {
                    throw new Exception(&quot;Compilation Error Creating Assembly&quot;);
                }
                var a  = results.CompiledAssembly;
            }
            else
            {
                throw new Exception(&quot;Invalid WSDL&quot;);
            }
        }
        static void GenerateCSCodeForService(EndpointAddress metadataAddress, string outputFile)
        {
            MetadataExchangeClient mexClient = new MetadataExchangeClient(
                new Uri(@&quot;http://localhost:55771/Service1.svc?wsdl&quot;), MetadataExchangeClientMode.HttpGet);

            mexClient.ResolveMetadataReferences = true;
            MetadataSet metaDocs = mexClient.GetMetadata();

            WsdlImporter importer = new WsdlImporter(metaDocs);
            ServiceContractGenerator generator = new ServiceContractGenerator();

            object dataContractImporter;
            XsdDataContractImporter xsdDCImporter;
            if (!importer.State.TryGetValue(typeof(XsdDataContractImporter), out dataContractImporter))
            {
                Console.WriteLine(&quot;Couldn&#39;t find the XsdDataContractImporter! Adding custom importer.&quot;);
                xsdDCImporter = new XsdDataContractImporter();
                xsdDCImporter.Options = new ImportOptions();
                importer.State.Add(typeof(XsdDataContractImporter), xsdDCImporter);
            }
            else
            {
                xsdDCImporter = (XsdDataContractImporter)dataContractImporter;
                if (xsdDCImporter.Options == null)
                {
                    Console.WriteLine(&quot;There were no ImportOptions on the importer.&quot;);
                    xsdDCImporter.Options = new ImportOptions();
                }
            }
           // xsdDCImporter.Options.DataContractSurrogate = new DCAnnotationSurrogate();

            // Uncomment the following code if you are going to do your work programmatically rather than add 
            // the WsdlDocumentationImporters through a configuration file. 
            /*
            // The following code inserts a custom WsdlImporter without removing the other 
            // importers already in the collection.
            System.Collections.Generic.IEnumerable&lt;IWsdlImportExtension&gt; exts = importer.WsdlImportExtensions;
            System.Collections.Generic.List&lt;IWsdlImportExtension&gt; newExts 
              = new System.Collections.Generic.List&lt;IWsdlImportExtension&gt;();
            foreach (IWsdlImportExtension ext in exts)
            {
              Console.WriteLine(&quot;Default WSDL import extensions: {0}&quot;, ext.GetType().Name);
              newExts.Add(ext);
            }
            newExts.Add(new WsdlDocumentationImporter());
            System.Collections.Generic.IEnumerable&lt;IPolicyImportExtension&gt; polExts = importer.PolicyImportExtensions;
            importer = new WsdlImporter(metaDocs, polExts, newExts);
            */

            System.Collections.ObjectModel.Collection&lt;ContractDescription&gt; contracts
              = importer.ImportAllContracts();
            importer.ImportAllEndpoints();
            foreach (ContractDescription contract in contracts)
            {
                generator.GenerateServiceContractType(contract);
            }
            if (generator.Errors.Count != 0)
                throw new Exception(&quot;There were errors during code compilation.&quot;);

            //Write the code dom
            System.CodeDom.Compiler.CodeGeneratorOptions options
              = new System.CodeDom.Compiler.CodeGeneratorOptions();
            options.BracingStyle = &quot;C&quot;;
            System.CodeDom.Compiler.CodeDomProvider codeDomProvider
              = System.CodeDom.Compiler.CodeDomProvider.CreateProvider(&quot;C#&quot;);
            System.CodeDom.Compiler.IndentedTextWriter textWriter
              = new System.CodeDom.Compiler.IndentedTextWriter(new System.IO.StreamWriter(outputFile));
            codeDomProvider.GenerateCodeFromCompileUnit(
              generator.TargetCompileUnit, textWriter, options
            );
            textWriter.Close();
        }

        public static void GenerateAssemblyForSVC(string url)
        {
            Uri address = new Uri(url);
            MetadataExchangeClientMode mexMode = MetadataExchangeClientMode.HttpGet;
            MetadataExchangeClient metadataExchangeClient = new MetadataExchangeClient(address, mexMode);
            metadataExchangeClient.ResolveMetadataReferences = true;

            //Trust all certificates
            System.Net.ServicePointManager.ServerCertificateValidationCallback = ((sender, certificate, chain, sslPolicyErrors) =&gt; true);
            ICredentials networkCredential = new NetworkCredential(&quot;username&quot;, &quot;password&quot;, &quot;domain&quot;);
            metadataExchangeClient.HttpCredentials = networkCredential;

            MetadataSet metadataSet = metadataExchangeClient.GetMetadata();
            WsdlImporter wsdlImporter = new WsdlImporter(metadataSet);
            Collection&lt;ContractDescription&gt; contracts = wsdlImporter.ImportAllContracts();
            ServiceEndpointCollection allEndpoints = wsdlImporter.ImportAllEndpoints();

            ServiceContractGenerator serviceContractGenerator = new ServiceContractGenerator();
            foreach (ContractDescription contract in contracts)
            {
                serviceContractGenerator.GenerateServiceContractType(contract);
            }

            // Generate a code file for the contracts.
            CodeGeneratorOptions codeGeneratorOptions = new CodeGeneratorOptions();
            codeGeneratorOptions.BracingStyle = &quot;C&quot;;

            // Create Compiler instance of a specified language.
            CompilerResults compilerResults;
            using (CodeDomProvider codeDomProvider = CodeDomProvider.CreateProvider(&quot;CSharp&quot;))
            {

                // Adding WCF-related assemblies references as copiler parameters, so as to do the compilation of particular service contract.
                CompilerParameters compilerParameters = new CompilerParameters(new string[] { &quot;System.dll&quot;, &quot;System.ServiceModel.dll&quot;, &quot;System.Runtime.Serialization.dll&quot; });

                compilerParameters.GenerateInMemory = true;
                compilerParameters.WarningLevel = 1;

                compilerResults = codeDomProvider.CompileAssemblyFromDom(compilerParameters, serviceContractGenerator.TargetCompileUnit);
            }

            if (compilerResults.Errors.Count &lt;= 0)
            {
                var assembly = compilerResults.CompiledAssembly;
            }
            else
            {
                foreach (CompilerError error in compilerResults.Errors)
                {
                    Console.WriteLine(error.ErrorNumber + &quot;: &quot; + error.ErrorText + &quot; &quot; + error.IsWarning + &quot; &quot; + error.Line);
                }

                throw new Exception(&quot;Compiler Errors - unable to build Web Service Assembly&quot;);
            }
        }
&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Using self-service hosting way to deply WCF&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&quot;prettyprint linenums lang-csharp&quot;&gt;using System;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Description;
using System.ServiceModel.Web;


public static class HostService
{

    [ServiceContract(Namespace = &quot;WCFServiceHost&quot;)]
    public interface ICalculator
    {
        [WebInvoke(ResponseFormat = WebMessageFormat.Json, BodyStyle = WebMessageBodyStyle.Wrapped)]
        MathResult DoMathJson(double n1, double n2);

        [WebInvoke(ResponseFormat = WebMessageFormat.Xml, BodyStyle = WebMessageBodyStyle.Wrapped)]
        MathResult DoMathXml(double n1, double n2);

    }

    public class CalculatorService : ICalculator
    {

        public MathResult DoMathJson(double n1, double n2)
        {
            return DoMath(n1, n2);
        }

        public MathResult DoMathXml(double n1, double n2)
        {
            return DoMath(n1, n2);
        }

        private MathResult DoMath(double n1, double n2)
        {
            MathResult mr = new MathResult();
            mr.sum = n1 + n2;
            mr.difference = n1 - n2;
            mr.product = n1 * n2;
            mr.quotient = n1 / n2;
            return mr;
        }
    }

    [DataContract]
    public class MathResult
    {
        [DataMember]
        public double sum;

        [DataMember]
        public double difference;

        [DataMember]
        public double product;

        [DataMember]
        public double quotient;
    }

    public static void Host()
    {
        var adrs = new Uri[1];
        adrs[0] = new Uri(&quot;http://localhost:3980/service&quot;);
        using (ServiceHost serviceHost = new ServiceHost(typeof(CalculatorService), adrs))
        {
            try
            {

                ServiceMetadataBehavior smb = new ServiceMetadataBehavior();
                smb.HttpGetEnabled = true;
                smb.MetadataExporter.PolicyVersion = PolicyVersion.Policy15;
                serviceHost.Description.Behaviors.Add(smb);

                // Open the ServiceHost to start listening for messages.
                serviceHost.Open();

                // The service can now be accessed.
                Console.WriteLine(&quot;The service is ready.&quot;);
                Console.WriteLine(&quot;Press &lt;ENTER&gt; to terminate service.&quot;);
                Console.ReadLine();

                // Close the ServiceHost.
                serviceHost.Close();
            }
            catch (TimeoutException timeProblem)
            {
                Console.WriteLine(timeProblem.Message);
                Console.ReadLine();
            }
            catch (CommunicationException commProblem)
            {
                Console.WriteLine(commProblem.Message);
                Console.ReadLine();
            }
        }
    }
}

&lt;/pre&gt;
&lt;p&gt;Once we generated assembly, then we can use that to call service&lt;/p&gt;
&lt;pre class=&quot;prettyprint linenums lang-csharp&quot;&gt;
        private static void Execute(string wsdlUrl)
        {
            var clientProxyType = asm.GetTypes().First(
                t =&gt; t.IsClass &amp;&amp; t.Name == &quot;Calculator&quot; + &quot;Client&quot; &amp;&amp;
                     t.GetInterface(typeof(ICommunicationObject).Name) != null);

            var interfaces = clientProxyType.GetInterfaces();
            var currentServiceEndpoint = (from itm in interfaces select allEndpoints).FirstOrDefault();

            if (currentServiceEndpoint == null)
            {
                throw new Exception(&quot;No endpoint found&quot;);
            }

            var endpoint = currentServiceEndpoint.FirstOrDefault(itm =&gt; wsdlUrl.Contains(itm.Address.ToString()));
            if (endpoint == null)
            {
                throw new Exception(&quot;No binding found&quot;);
            }

            object obj = asm.CreateInstance(
               clientProxyType.Name,
               false,
               BindingFlags.CreateInstance,
               null,
               new object[] { endpoint.Binding, endpoint.Address },
               CultureInfo.CurrentCulture,
               null);
            Type type = obj.GetType();
            List&lt;object&gt; args = new List&lt;object&gt;();
            var methodName = &quot;DoMathXml&quot;;

            var memInfo = type.GetMethod(methodName);
            var memParams = memInfo.GetParameters();
            args.Add(2);
            args.Add(2);
            var result = type.InvokeMember(&quot;DoMathXml&quot;, BindingFlags.InvokeMethod, null, obj, args.ToArray());
        }

&lt;/pre&gt;
</description>
        </item>
        
        <item>
            <title>Some tips about Mongo db basically</title>
            <link>Homepage link/articles/mongo-db-tips.html?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=rss</link>
            <guid>Homepage link/articles/mongo-db-tips.html</guid>
            <author>jl_lsj#outlook.com Dino Liu</author>
            <pubDate>Fri, 13 May 2016 00:00:00 +0800</pubDate>
            <description>&lt;p&gt;Some tips about mongodb&lt;/p&gt;
&lt;pre&gt;CRUD Operations:

Inserting:

insertOne(): It inserts one document and creates a collection if it doesn’t exist
insertMany([{},{}]): You pass it an array of objects, and it creates all of them as documents in the collection, it returns an insertedIds array containing all insert _ids. 
You can pass it as a second argument the ordered: false parameter that says the if there are error don’t stop just keep going.
You can pass “_id” to set an specific id of the document.
Reading:

find(): returns all documents if you don’t pass it a query selector
find({rating: “pg-13”}): returns all documents that have a rating of “pg-13&quot;
find({“tomato.meter”: 100}): returns all documents that have 100 in the value meter of the object nested tomato
You can use . notation to access documents inside documents always inside “&quot;
Equality matches on arrays:
On the entire array: find({&quot;actors”: [“juan”, “carolina&quot;]}) , putting [] makes the jury try to find and exact match of the array.
Based on any element: find({“actors”: “juan”}), this will find all documents where “juan” is an element inside the “actors” array.
Based on an specific element: find({“actors.0”: “juan&quot;}), this will find all documents where the first element of the “actors” arrays is “juan”
Projections:
They are the second arguments in the find() method, they specified which fields to return in the documents
find({“actors”: “juan”}, {title: 1, _id: 0}): this will return only the title field and will exclude the _id field
find({“actors”: “juan”, {tittle: 0, age: 0}}: this will return all fields except title and age
Cursors:
All find queries return a cursor, a cursor is limited by a batch size in order to iterate over the cursor you can use the it command.
If the cursor is assigned to a variable C you can do the following. c.hasNext() to see if there are more documents in the cursor and c.next() to show next batch and finally c.objsLeftInBatch() tells me how many objects remain in the cursor.
Comparison Operators:
Comparison operator lets us find things based on a criteria, like greater than , less than or not equal to. the way to use then is putting them inside an object inside de selection criteria
find({“tomato.meter”: {$gt: 95}, actors: “juan”}) : this will find all movies with a meter greater then 95 and where one of the actors was “juan” - list of Comparison Operators: - $gt
$gte - $lt
$lte - $ne
$in: the value is always an array - $nin: the value is always an array
Element Operators:
Element operators let os see if a document has a field and if the field os of certain type
$exists: find({“tomato.meter”:{$exists: true}}) this will find al documents in the movies collections where the “tomato.meter” field does exist - $type: find( { _id: { $type: “string” } }) this will find all documents where the _id fields has a value of the type “string” - Logical Operators: - Logical operator are to to queries with or and or nor. They always need an Array as value - $and : find({ $and: [“tomato.meter”:{$exists: true},“tomato.meter”:{$ne: null}] }), the $and is explicit in most queries except when we need to specified criteria on the same key, like in here with tomato.meter
$or : find({ $or: [“tomato.meter”:{$gt: 95},“meteoritic.meter”:{$gt: 88}] }) - Array Operators: - Array operators work on fields where the value is an array - $all : find({ countries: { $all: [“co”, “us”, “au”] } }) this will find all documents where the field countries has inside its array the values the values [“co”, “us”, “au”] - $elemtMatch find({ boxOffice: { $elementMatch: {country: “UK”, revenue: {$gt: 15} } } }) this finds all documents where the box-office is an array of object in where one of the objects has the value “UK” and revue gt than 15 - $size find({ countries: { $size: 1 } }) this finds all documents where the the countries field is an array with only 1 element.
Updates:

updateOne( {selection_critiria}, {update_operation} ), the selection criteria finds all documetns that match but updateOne only updates the first one that it finds. The update operations is specified inside the second parameter, this operation can use the operators the exist to update documents.
updateOne({ title: “the martian” }, { set$ { poster: “some poster” } }) - updateMany - upserts - replaceOne - Update Operators: - $inc Increments the value of the field by the specified amount.
$mul Multiplies the value of the field by the specified amount. - $rename Renames a field.
$setOnInsert Sets the value of a field if an update results in an insert of a document. Has no effect on update operations that modify existing documents. - $set Sets the value of a field in a document.
$unset Removes the specified field from a document. - $min Only updates the field if the specified value is less than the existing field value.
$max Only updates the field if the specified value is greater than the existing field value. - $currentDate Sets the value of a field to current date, either as a Date or a Timestamp.
Array Operators
$: Acts as a placeholder to update the first element that matches the query condition in an update. - $addToSet: Adds elements to an array only if they do not already exist in the set.
$pop: Removes the first or last item of an array. - $pullAll: Removes all matching values from an array.
$pull: Removes all array elements that match a specified query. - $pushAll: Deprecated. Adds several items to an array.
$push: Adds an item to an array. - Modifiers - $each: Modifies the $push and $addToSet operators to append multiple items for array updates. - $slice : Modifies the $push operator to limit the size of updated arrays. - $sort : Modifies the $push operator to reorder documents stored in an array. - $position : Modifies the $push operator to specify the position in the array to add elements.



mongoimport: Allows to restores a dump composed of human readable JSON

mongorestore: Restores a dump of a binary file

Cursors:

A Cursors is just a description of the query to be perform, it doesn&#39;t actually perform a query, in order to return a query we have to tell how to consume it, ways to consume a cursor:

toArray(): Convert all returning arguments to an array Less performance because it returns all documents at once
forEach(): Different than the forEach method of javascript, it expects two arguments, the first one being the callback to be call for each document in the iteration, and the second one being the callback on what to do if there’s an error or when the loop is done. It is a lot more performant than toArray thanks to batch loading

cursor.forEach( function(doc){ console.log(doc.name +&quot; is a &quot; + doc.category_code + &#39; company.&#39;) }, function(err){ assert.equal(null, err) db.close() } )

.project(): this is the best way to use projections with a cursor, you just pass the projection object to it.

$regex:

You can specify if you want to add regex to a query query with case sensitive or insensitive by passing options

{$regex: /[abc]/, options: “i”} , &quot;i&quot; for insensitive

Dot Notation:

In the node.js mongodb driver you can use dot notation both to access embedded documents, or documents that are inside arrays in a document.

Example:

Array with documents :

offices : [ {code: “col”}, {code: “usa”} ]

We can use office.code to access each array element

Embedded document:

offices : { name: “bogota”, code: “col&quot; }

Normal dot notation way to access embedded document: offices.name =&gt; &quot;bogota&quot;

SKIPT, LIMIT, SORT:

In order to use this operators we need to chain them to a cursor. they do not force a query to the database. MongoDb will always apply first the sort then skip and last limit.

Sort
ASC and DESC
cursor.sort({founded_year: 1}) // ascending order 1
cursor.sort({founded_year: -1}) // descending order -1
Index
If sorting by a field that does not have an index, mongo will delegate the sorting to memory and if the database is to big this is going to explote, so you need to add an index to the field in order to let mongo do the sorting in the database with the following command db.companies.createIndex({permalink: 1})
Sorting by multiple fields
In this case we need to pass an array to sort() instead of an object because and array guarantees the order in which we are going to sort by, with and object we don’t have that guarantee
cursor.sort([ [‘founded_year’, 1], [‘employees’, -1] ]) we are sorting here by found year first in ascending order and then by number of employees in descending order
Skip
cursor.skip(10) // this will skip the first 10 documents
Limit
cursor.limit(10) // this will limit de query result to only 10 documents
Searching for Duplicates:

Search for a field name that exists and it’s not null and project that field and the ‘updated_at’ field then sort by that field name then compare the previous record to the current_one if they have the same values delete the current_one and then update the previous doc to the current_one


Living without constrains
In mongoDB there are no foreign_key constrains, so there’s no way that we can guaranteed that we associated a document to another one that really exists so the best way to get around this problem is by: Embedding documents. When we embed documents we guaranteed that we are adding thing to a document that already exists.
Living without Transactions
In mongoDb there’s no transactions, so there’s no way that we can perform operations on several documents own one single command. So there’s no way that we can comply with the ACID principles. The way to get around this is by:
Restructuring: this means that we are doing we are embedding documents that meas that all the information that we need regarding a resource lives inside in one single document so with only one atomic operation we can modify all that we need without relying on transactions.
Tolerate
Implement software checks: check systematically for inconsistencies in the DB
Relations:

One To One: Options [embed or link] :

Considerations to have on wether to embed or link:
frequency of acces: If you access all of times one part of the relation but not the other one and the other one is really big maybe it’s better not to embed
growing patter: if i have to constantly update one part but no the other maybe its better to not embed
Document size: maybe embedding can lead to documents larger than 16mb
Atomic operations: if i want to have atomic operations i need to embed.
One to Many:

The question here really is if it really is One to Many or One to Few, is the relations it’s really one to many there’s no other way to do it other than by Linking, if its is one to few we could embed the documents.

Many to Many:

Embed at your own peril, but the best way is probably by using Linking in which we have an array of the foreign_keys, best way to only have it in only one direction but is also good to have it in both directions depending on data access patterns.

Multikey indexes:

When you are linking, specially own Many to Many relationships theres always to obvious queries that you would like to perform. For example if you have the Students collections and the Teachers collections. you can put an array inside the student document with the ID of the Teachers that that student has had. Example:

Student: { _id: 1, name: &quot;juan&quot;, teachers: [1,2,3,4] }

Teacher: { _id: 1, name: &quot;Tony Stark&quot; }

With this example if you would like to do a query for getting all the teachers of a student you could do:

const teachers = db.students.findOne({name: &quot;juan&quot;}, {teachers: 1})
db.teachers.find({_id: {$in: teachers}})
If you would like to get all the students that have had a particularly teacher your benefit of using Multikey Indexes:

First add the mutikey index to the array of teachers in the student document with this command:
db.students.ensureIndex( {teachers: 1} )
Then query the students field using the $all operators - db.students.find({ teachers: { $all: [1 , 2] } }) // this is going to fins all students with teachers 1 and 2
.explain() at the end of the query shows how mongo did the operation

Modeling Trees:

Trees are parent children relationships like the one that you would find in a categories collection where a category has children categories a parent category and ancestor categories.

The best way to model this is with a document like this one. In this way I know how is my immediate parent, and also all my others ancestors, so if i want to get all the children of one category i could do:

db.categories.find({ancestors: 34), this way Im searching for all categories that have my id as one of their ancestor.

{ _id: 34, name : &quot;Snorkeling&quot;, parent_id: 12, ancestors: [12, 35, 90] }

Denormalization Summary:

1:1 -&gt; Embed 1: Many -&gt; Embed putting the many inside the One Many: Many -&gt; Link and use multi key Indexes

&lt;/pre&gt;</description>
        </item>
        
        <item>
            <title>beautiful Chinese style</title>
            <link>Homepage link/articles/beautiful-chinese-style.html?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=rss</link>
            <guid>Homepage link/articles/beautiful-chinese-style.html</guid>
            <author>jl_lsj#outlook.com Dino Liu</author>
            <pubDate>Tue, 27 Oct 2015 00:00:00 +0800</pubDate>
            <description>&lt;h2 id=&quot;beautiful-chinese-style&quot;&gt;Beautiful Chinese style&lt;/h2&gt;
&lt;p&gt;On the internet I found a list of chinese themes, they are so beautifully, I have based on those on to reassign colors for my blog. It much pretty than before. 
Therefore I collected them on my blog to memo.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/bmiddle/a94a8951gw1exfh8bgybmj20c81f9t9x.jpg&quot; alt=&quot;yuanqing&quot;&gt;
&lt;img src=&quot;http://ww4.sinaimg.cn/bmiddle/a94a8951gw1exfh825daxj20c81f9dh3.jpg&quot; alt=&quot;xiangsihui&quot;&gt;
&lt;img src=&quot;http://ww2.sinaimg.cn/bmiddle/a94a8951gw1exfh81fkcnj20c81f9wfw.jpg&quot; alt=&quot;quehui&quot;&gt;
&lt;img src=&quot;http://ww2.sinaimg.cn/bmiddle/a94a8951gw1exfh80pp31j20c81f9q48.jpg&quot; alt=&quot;ZhanLan&quot;&gt;
&lt;img src=&quot;http://ww2.sinaimg.cn/bmiddle/a94a8951gw1exfh7zq7yvj20c80y6wfj.jpg&quot; alt=&quot;tianqing&quot;&gt;
&lt;img src=&quot;http://ww1.sinaimg.cn/bmiddle/a94a8951gw1exfh7z2p3wj20c81f90u5.jpg&quot; alt=&quot;KuLyv&quot;&gt;
&lt;img src=&quot;http://ww1.sinaimg.cn/bmiddle/a94a8951gw1exfh7yf1imj20c80y60tp.jpg&quot; alt=&quot;ZiShuiJing&quot;&gt;
&lt;img src=&quot;http://ww3.sinaimg.cn/bmiddle/a94a8951gw1exfh7xq78pj20c80y6wfi.jpg&quot; alt=&quot;ShiYangJin&quot;&gt;
&lt;img src=&quot;http://ww3.sinaimg.cn/bmiddle/a94a8951gw1exfh7wy17qj20c80y6jsc.jpg&quot; alt=&quot;YinZhu&quot;&gt;&lt;/p&gt;
&lt;p&gt;the rgb of them are:&lt;/p&gt;
&lt;p&gt;###YuanQing:      rgb(62,60,61)&lt;/p&gt;
&lt;p&gt;###HongZao:       rgb(79,83,85)&lt;/p&gt;
&lt;p&gt;###ShenYan:       rgb(90,76,76)&lt;/p&gt;
&lt;p&gt;###XiangSiHui:    rgb(98,92,82)&lt;/p&gt;
&lt;p&gt;###XuanJin:       rgb(121,111,84)&lt;/p&gt;
&lt;p&gt;###DaiLan:        rgb(48,71,88)&lt;/p&gt;
&lt;p&gt;###QueHui:        rgb(69,86,103)&lt;/p&gt;
&lt;p&gt;###HuaQing:       rgb(84,107,131)&lt;/p&gt;
&lt;p&gt;###ShenZhuYue:    rgb(37,120,181)&lt;/p&gt;
&lt;p&gt;###DianLan: rgb(27,84,242)&lt;/p&gt;
&lt;p&gt;###BiYuShi: rgb(86,149,151)&lt;/p&gt;
&lt;p&gt;###ChunLan: rgb(123,161,168)&lt;/p&gt;
&lt;p&gt;###TianQing: rgb(46,195,231)&lt;/p&gt;
&lt;p&gt;###CangLv: rgb(78,95,69)&lt;/p&gt;
&lt;p&gt;###KuLv: rgb(183,178,120)&lt;/p&gt;
&lt;p&gt;###ChunLv: rgb(227,239,209)&lt;/p&gt;
&lt;p&gt;###JiangZi: rgb(112,77,78)&lt;/p&gt;
&lt;p&gt;###ZiShuiJing: rgb(195,166,203)&lt;/p&gt;
&lt;p&gt;###FeiHong: rgb(195,86,85)&lt;/p&gt;
&lt;p&gt;###ShiYangJin: rgb(252,177,170)&lt;/p&gt;
&lt;p&gt;###ChenSHa: rgb(175,94,83)&lt;/p&gt;
&lt;p&gt;###YinZhu: rgb(221,59,68)&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Install GAC without gacutil tool</title>
            <link>Homepage link/articles/install gac without gacutil tool.html?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=rss</link>
            <guid>Homepage link/articles/install gac without gacutil tool.html</guid>
            <author>jl_lsj#outlook.com Dino Liu</author>
            <pubDate>Mon, 21 Sep 2015 00:00:00 +0800</pubDate>
            <description>&lt;h2 id=&quot;install-gac-without-gacutil-too&quot;&gt;Install GAC without gacutil too&lt;/h2&gt;
&lt;p&gt;Most time we should be use gac util too to instll gac in computer for windows. 
But sometimes if the compouter didn&#39;t install VS or doesn&#39;t have gac util tool, 
how to install gac use comand line? I found a solution for it then memo it.&lt;/p&gt;
&lt;pre class=&quot;prettyprint linenums lang-javascript&quot;&gt;   1:  BEGIN {
   2:      $ErrorActionPreference = &quot;Stop&quot;
   3:      
   4:      if ( $null -eq ([AppDomain]::CurrentDomain.GetAssemblies() |? { $_.FullName -eq &quot;System.EnterpriseServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot; }) ) {
   5:          [System.Reflection.Assembly]::Load(&quot;System.EnterpriseServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;) | Out-Null
   6:      }
   7:      
   8:      $publish = New-Object System.EnterpriseServices.Internal.Publish
   9:  }
  10:  PROCESS {
  11:      $assembly = $null
  12:      
  13:      if ( $_ -is [string] ) {
  14:          $assembly = $_
  15:      } elseif ( $_ -is [System.IO.FileInfo] ) {
  16:          $assembly = $_.FullName
  17:      } else {
  18:          throw (&quot;The object type &#39;{0}&#39; is not supported.&quot; -f $_.GetType().FullName)
  19:      }
  20:      
  21:      if ( -not (Test-Path $assembly -type Leaf) ) {
  22:          throw &quot;The assembly &#39;$assembly&#39; does not exist.&quot;
  23:      }
  24:      
  25:      if ( [System.Reflection.Assembly]::LoadFile( $assembly ).GetName().GetPublicKey().Length -eq 0 ) {
  26:          throw &quot;The assembly &#39;$assembly&#39; must be strongly signed.&quot;
  27:      }
  28:      
  29:      Write-Output &quot;Installing: $assembly&quot;
  30:      
  31:      $publish.GacInstall( $assembly )
  32:  }

&lt;/pre&gt;
&lt;p&gt;the reference: &lt;a href=&quot;http://weblogs.asp.net/adweigert/powershell-install-gac-gacutil-for-powershell&quot;&gt;PowerShell: Install-Gac (GACUTIL for PowerShell)&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>the book memo of you don&#39;t know js - ES 6</title>
            <link>Homepage link/articles/you donot know js -es 6.html?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=rss</link>
            <guid>Homepage link/articles/you donot know js -es 6.html</guid>
            <author>jl_lsj#outlook.com Dino Liu</author>
            <pubDate>Thu, 10 Sep 2015 00:00:00 +0800</pubDate>
            <description>&lt;h2 id=&quot;the-book-memo-of-you-don-39-t-know-js-es-6&quot;&gt;The book memo of you don&#39;t know js - ES 6&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;The book memo of &lt;You Don&#39;t Know JS - ES6&gt;.
It&#39;s a essential book for ECMA Script 6.&lt;/p&gt;
&lt;h3 id=&quot;syntax&quot;&gt;Syntax&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;let Declarations&lt;ul&gt;
&lt;li&gt;it&#39;s easy to understand that if use the let to declare a variable which scope is only under the block.&lt;/li&gt;
&lt;li&gt;try to put let declaration on the top of the block, if use the variable before the let declaration, the referenceError will be ecountered, it&#39;s called a TDZ(temporal dead zone) error.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;const Declarations&lt;ul&gt;
&lt;li&gt;It&#39;s a variable that&#39;s read-only after its initial value is set.&lt;/li&gt;
&lt;li&gt;It&#39;s cannot be able to garbage collected.&lt;/li&gt;
&lt;li&gt;Don&#39;t use const on variables.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spread and Rest&lt;ul&gt;
&lt;li&gt;the oprator ... that&#39;s typically reffered to as the spread or rest which depending on where it&#39;s used.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Default parameter values&lt;ul&gt;
&lt;li&gt;something like that function plusNo(x = 0, y = 1){}, it&#39;s void to judge parameters in function for default values.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Default value expressions&lt;ul&gt;
&lt;li&gt;It same as default parameter, function plusNo(){x = 0, y = foo(z)}&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Destructuring&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
        <item>
            <title>The best practices on linux</title>
            <link>Homepage link/articles/the best practices on linux.html?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=rss</link>
            <guid>Homepage link/articles/the best practices on linux.html</guid>
            <author>jl_lsj#outlook.com Dino Liu</author>
            <pubDate>Mon, 10 Aug 2015 00:00:00 +0800</pubDate>
            <description>&lt;h2 id=&quot;the-best-practices-on-linux&quot;&gt;The best practices on Linux&lt;/h2&gt;
&lt;h3 id=&quot;1-create-bat-file-for-cp-file&quot;&gt;1. create bat file for cp file.&lt;/h3&gt;
&lt;p&gt;whenever do edit config file that&#39;s need backup the files, the suggest command should be &lt;/p&gt;
&lt;pre class=&quot;prettyprint linenums lang-shell&quot;&gt;    sudo cp xxx xxx_`date +%y%m%d_%H:%M`
&lt;/pre&gt;
&lt;p&gt;it&#39;s not convenient for every time.
here, we could be create a bat file&lt;/p&gt;
&lt;pre class=&quot;prettyprint linenums lang-shell&quot;&gt;    #!/bin/bash
    sudo cp $1  $1_`date +%y%m%d_%H:%M
&lt;/pre&gt;
&lt;p&gt; save this file in home folder for example,
 when use it just execute  sh /home/bak xxx, then the xxx file should be backup as xxx_yymmdd_HH:MM  in the same folder.&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>the basic shell command</title>
            <link>Homepage link/articles/basic shell command for linux.html?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=rss</link>
            <guid>Homepage link/articles/basic shell command for linux.html</guid>
            <author>jl_lsj#outlook.com Dino Liu</author>
            <pubDate>Sat, 01 Aug 2015 00:00:00 +0800</pubDate>
            <description>&lt;h2 id=&quot;the-basic-command-of-shell&quot;&gt;The basic command of shell&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;man: help commoand&lt;/li&gt;
&lt;li&gt;pwd: print current working directory.&lt;/li&gt;
&lt;li&gt;ls: list directory content.&lt;/li&gt;
&lt;li&gt;cd: change directory.&lt;/li&gt;
&lt;li&gt;mkdir: make directories.&lt;/li&gt;
&lt;li&gt;rmdir: remove empty directories.&lt;/li&gt;
&lt;li&gt;rm: remove files or directories.&lt;/li&gt;
&lt;li&gt;service: run a system Vinit script.&lt;/li&gt;
&lt;li&gt;vim: open document use vim edotor.&lt;/li&gt;
&lt;li&gt;cp: copy files or directories.&lt;/li&gt;
&lt;li&gt;touch: change file timestamps.&lt;/li&gt;
&lt;li&gt;cat: concatenate files and print on the standard output.&lt;/li&gt;
&lt;li&gt;find: search for fiels in a directory hierarchy.&lt;/li&gt;
&lt;li&gt;echo: display a line of text.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;system-information&quot;&gt;system information&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;uptime: tell how long the system has been running.&lt;/li&gt;
&lt;li&gt;w: show who is logged on and what they are doing.&lt;/li&gt;
&lt;li&gt;who: show who is logged on.&lt;/li&gt;
&lt;li&gt;whoami: print effective userid.&lt;/li&gt;
&lt;li&gt;uname: print system information.&lt;/li&gt;
&lt;li&gt;cal: displays a calendar and the date of Easter.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;file-oprating&quot;&gt;file oprating&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;less: opposite of more.&lt;/li&gt;
&lt;li&gt;more: file perusal filter for crt viewing.&lt;/li&gt;
&lt;li&gt;diff: compare files line by line.&lt;/li&gt;
&lt;li&gt;patch: apply a diff file to an original.&lt;/li&gt;
&lt;li&gt;cksum: checksum and count the bytes in a file.&lt;/li&gt;
&lt;li&gt;md5sum: compute and check MD5 message digest.&lt;/li&gt;
&lt;li&gt;tar: the GUN version of the tar archiving utility.&lt;/li&gt;
&lt;li&gt;whereis: locate the binary, source, and manual page files for a command.&lt;/li&gt;
&lt;li&gt;locate: find files by name.&lt;/li&gt;
&lt;li&gt;find: search for files in a directory hierarchy.&lt;/li&gt;
&lt;li&gt;grep, egrep, fgrep, rgrep: print lines matching a pattern.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;permission&quot;&gt;permission.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;chmod: change file mode bits.&lt;/li&gt;
&lt;li&gt;chown: change file owner and group.&lt;/li&gt;
&lt;li&gt;chgrp: change group ownership.&lt;/li&gt;
&lt;li&gt;lsattr: list file attributes on a linux second extended file system.&lt;/li&gt;
&lt;li&gt;chattr: change file attributes on a linux file system.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;user&quot;&gt;user.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;su: change user ID or become superuser.&lt;/li&gt;
&lt;li&gt;sudo: execute command as another user.&lt;/li&gt;
&lt;li&gt;passwd: change user password.&lt;/li&gt;
&lt;li&gt;gpasswd: administer /etc/group and /etc/gshadow.&lt;/li&gt;
&lt;li&gt;chsh: change login shell.&lt;/li&gt;
&lt;li&gt;usermod: modify a user account.&lt;/li&gt;
&lt;li&gt;useradd: create a new user or update default new user information.&lt;/li&gt;
&lt;li&gt;userdel: delete a user account and related files.&lt;/li&gt;
&lt;li&gt;id: print real and effective user and group IDs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;process&quot;&gt;process.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ps: report a snapshot of the current processes.&lt;/li&gt;
&lt;li&gt;pstree: display a tree of processes.&lt;/li&gt;
&lt;li&gt;pgrep, kill: look up or signal processes based on name and other attibutes.&lt;/li&gt;
&lt;li&gt;kill: send a signal to a process.&lt;/li&gt;
&lt;li&gt;top: display linux processes.&lt;/li&gt;
&lt;li&gt;renice: alter priority of running processes.&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
        <item>
            <title>The tip of unescape html code in JS</title>
            <link>Homepage link/articles/unescape-html-code.html?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=rss</link>
            <guid>Homepage link/articles/unescape-html-code.html</guid>
            <author>jl_lsj#outlook.com Dino Liu</author>
            <pubDate>Fri, 17 Jul 2015 00:00:00 +0800</pubDate>
            <description>&lt;p&gt;#The tips of js development&lt;/p&gt;
&lt;p&gt;In some case there is html code to display in textbox or label, it&#39;s not human world, so that&#39;s need unescape the html code,
and some JS libraries are include this function, such as string.js and underscore.js.&lt;/p&gt;
&lt;pre class=&quot;prettyprint linenums lang-javascript&quot;&gt;this.unescapeHTML = function(str) {
    var escapeChars = { lt: &#39;&lt;&#39;, gt: &#39;&gt;&#39;, quot: &#39;&quot;&#39;, apos: &quot;&#39;&quot;, amp: &#39;&amp;&#39; };
    if(typeof(str) !== &#39;string&#39;){
        return str;
    }else{
        return str.replace(/\&amp;([^;]+);/g, function(entity, entityCode) {
        var match;
        if ( entityCode in escapeChars) {
            return escapeChars[entityCode];
        } else if ( match = entityCode.match(/^#x([\da-fA-F]+)$/)) {
            return String.fromCharCode(parseInt(match[1], 16));
        } else if ( match = entityCode.match(/^#(\d+)$/)) {
            return String.fromCharCode(~~match[1]);
        } else {
            return entity;
        }});
    }

};
&lt;/pre&gt;
&lt;p&gt;some test code&lt;/p&gt;
&lt;pre class=&quot;prettyprint linenums lang-javascript&quot;&gt;console.log(this.unescapeHTML(&#39;&amp;amp&#39;));
=&gt; &amp;

&lt;/pre&gt;
&lt;p&gt;Its reference from stackoverflow: &lt;a href=&quot;http://stackoverflow.com/questions/17678694/replace-html-entities-e-g-8217-with-character-equivalents-when-parsing-an&quot;&gt;http://stackoverflow.com/questions/17678694/replace-html-entities-e-g-8217-with-character-equivalents-when-parsing-an&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
